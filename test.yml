- name: Execute commands and gather tool versions
  hosts: localhost
  gather_facts: false
  vars:
    tool_groups:
      cli:
        - {name: "azcli", shell: "az --version"}
      build:
        - {name: "ant", shell: "ant --version"}
        - {name: "maven", shell: "mvn -version"}
  tasks:
    - name: Run shell commands to get tool versions
      shell: "{{ item.shell }}"
      register: command_output
      with_subelements:
        - "{{ tool_groups | dict2items }}"
        - value
      loop_control:
        label: "{{ item.1.name }}"

    - name: Create formatted tool version summary file
      copy:
        content: |
          ========== TOOL VERSIONS ==========
          {% for group_name, tools in version_results.items() %}
          {{ group_name | upper }}:
          {% for tool in tools %}
            {{ '%-20s: %s' | format(tool.name, tool.version) }}
          {% endfor %}
          {% endfor %}
          ============================
        dest: "./tool_versions.txt"
      when: command_output is defined

    - name: Display Tool Versions Summary
      debug:
        msg: |
          ========== TOOL VERSIONS ==========
          {% set version_results = {} %}
          {% for item in command_output.results %}
            {% set group_name = item.item.1.name %}
            {% set tool_name = group_name %}
            {% set tool_version = item.stdout %}
            {% if group_name not in version_results %}
              {% set version_results = version_results | merge({group_name: []}) %}
            {% endif %}
            {% set version_results = version_results | merge({group_name: version_results[group_name] + [{ 'name': tool_name, 'version': tool_version }]}) %}
          {% endfor %}
          {% for group_name, tools in version_results.items() %}
          {{ group_name | upper }}:
          {% for tool in tools %}
            {{ '%-20s: %s' | format(tool.name, tool.version) }}
          {% endfor %}
          {% endfor %}
          ============================
