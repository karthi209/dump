---
- hosts: all
  become: yes
  vars:
    tool_groups:
      configuration_management:
        - { name: "Ansible CLI", command: "ansible --version | sed -n 's/.*\([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\\1/p'" }
        - { name: "Ansible Playbook", command: "ansible-playbook --version | sed -n 's/ansible-playbook \([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\\1/p'" }

      cloud_cli:
        - { name: "Azure CLI", command: "az version | sed -n 's/.*\"azure-cli\": \"\([^\"]\+\)\".*/\\1/p'" }
        - { name: "IBM Bluemix CLI", command: "ibmcloud --version | sed -n 's/version \([0-9]\+\.[0-9]\+\).*/\\1/p'" }

      kubernetes_tools:
        - { name: "Helm", command: "helm version | sed -n 's/version.BuildInfo{Version:\"v\([^\"]\+\)\".*/\\1/p'" }
        - { name: "Kubelogin", command: "kubectl-oidc_login version | sed -n 's/v\([0-9]\+\.[0-9]\+\).*/\\1/p'" }
        - { name: "Kubectl", command: "kubectl version --client | sed -n 's/Client Version: v\([0-9]\+\.[0-9]\+\).*/\\1/p'" }

      web_and_frontend:
        - { name: "Angular CLI", command: "ng version | sed -n 's/Angular CLI: \([0-9]\+\.[0-9]\+\).*/\\1/p'" }
        - { name: "Node.js", command: "node --version | sed 's/v//'" }
        - { name: "Grunt CLI", command: "grunt --version | sed -n 's/grunt-cli v\([0-9]\+\.[0-9]\+\).*/\\1/p'" }

      languages_and_runtimes:
        - { name: ".NET Core", command: "dotnet --version" }
        - { name: "Python3", command: "python3 --version | sed 's/Python //'" }
        - { name: "Go", command: "go version | sed -n 's/go\([0-9]\+\.[0-9]\+\).*/\\1/p'" }

      development_tools:
        - { name: "Git", command: "git --version | sed 's/git version //'" }
        - { name: "Apache Ant", command: "ant -version | sed 's/Ant //'" }
        - { name: "Chrome", command: "google-chrome --version | sed 's/Google Chrome //'" }

      database_tools:
        - { name: "SQL Server CLI", command: "sqlcmd -? | sed -n 's/Microsoft SQL Server Command Line Tool version \([0-9]\+\.[0-9]\+\).*/\\1/p'" }
        - { name: "PostgreSQL Client", command: "psql --version | sed 's/psql (PostgreSQL) //'" }
        - { name: "Liquibase", command: "liquibase --version | sed 's/Liquibase version //'" }

      cli_and_utility:
        - { name: "Curl", command: "curl --version | sed -n 's/curl \([0-9]\+\.[0-9]\+\).*/\\1/p'" }
        - { name: "yq", command: "yq --version | sed 's/version v//'" }

      containers_and_build:
        - { name: "Docker", command: "docker --version | sed 's/version //'" }
        - { name: "Maven", command: "mvn --version | sed -n 's/Apache Maven \([0-9]\+\.[0-9]\+\).*/\\1/p'" }

  tasks:
    - name: Initialize version tracking
      set_fact:
        version_results: {}

    - name: Collect tool versions
      shell: "{{ item.command }}"
      register: tool_version_output
      failed_when: false
      changed_when: false
      loop: "{{ group_tools }}"
      loop_control:
        loop_var: item
      when:
        - item.command is defined

    - name: Set version results for each tool
      set_fact:
        version_results:
          "{{ version_results | default({}) | combine({group_name : (version_results[group_name] | default([])) + [{'name': item.name, 'version': tool_version_output.results[loop.index0].stdout}]}) }}"
      when:
        - tool_version_output.results[loop.index0].stdout is defined

    - name: Display Tool Versions
      debug:
        msg: |
          ========== TOOL VERSIONS ==========
          {% for group_name, tools in version_results.items() %}
          {{ group_name | upper }}:
          {% for tool in tools %}
            {{ '%-20s : %s' | format(tool.name, tool.version) }}
          {% endfor %}
          {% endfor %}
          ============================
