---
- name: Print versions of tools and write to a file in a nicely formatted structure
  hosts: localhost
  gather_facts: no
  vars:
    tool_groups:
      cli:
        - ansible --version
        - git --version
        - curl --version
      build:
        - python3 --version
        - make --version
        - gcc --version
  tasks:
    - name: Create version report file
      copy:
        dest: /tmp/tools_version_report.txt
        content: ""
        force: yes

    - name: Get tool versions and store output
      command: "{{ item }}"
      loop: "{{ tool_groups.cli + tool_groups.build }}"
      register: tool_versions

    - name: Format and append tool versions to file
      blockinfile:
        path: /tmp/tools_version_report.txt
        marker: ""
        block: |
          {{ item.group | capitalize }} Tools:
          {% for tool in item.tools %}
          - {{ tool.name }}: {{ tool.version }}
          {% endfor %}
      loop:
        - group: cli
          tools: "{{ tool_versions.results[:tool_groups.cli | length] | zip(tool_groups.cli) | map('extract_tool_info') }}"
        - group: build
          tools: "{{ tool_versions.results[tool_groups.cli | length:] | zip(tool_groups.build) | map('extract_tool_info') }}"

  filters:
    extract_tool_info: >
      def extract_tool_info(tool_version_pair):
        tool_name_command = tool_version_pair[1].split()[0]
        tool_version = tool_version_pair[0].split("\n")[0]
        return {'name': tool_name_command, 'version': tool_version}
